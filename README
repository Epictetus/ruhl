Ruhl (Ruby Hypertext Language)

This project is here to flesh out an idea.  What I want is to have developers work with HTML and with the simple addition of a 'ruby' attribute, convert it to a dynamic page.

At no time in the dev process would the view be unviewable in a browser.  The view could actually retain the original template data the designer used because this replaces the content.  I think this is a nice plus.


Notes (use cases) for me to remember:

##############################################################################

<ul id="aab" ruby="present_results">
 <li>Lorem ipsum dolor sit amet</li>
 <li>consectetur adipiscing elit</li>
</ul>

Method :present_results would know how to represent itself in the context of the ul element.  In other words, it would know how to produce <li> elements.


##############################################################################

<h1 ruby="page_header">

Method :page_header would know how to represent itself in the context of the h1 element.

The ruby executed would replace the content of the element it was being called on.  


##############################################################################

<meta ruby="content: meta_description" content='This is a description template' id='metaDescription' name='description' />

content: meta_description is telling the parser to replace attribute 'content' with results from meta_description method.


##############################################################################

Things to note:

1) The ruby attribute is always removed from the output.
2) Each method called must accept a tag parameter.  

TODO: 

1) Work on supporting templates  (shouldn't be hard)
2) Work on supporting partials (shouldn't be hard)

